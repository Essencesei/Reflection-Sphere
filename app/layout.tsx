import type { Metadata } from "next";
import { Inter } from "next/font/google";

import "./globals.css";
import SessionProvider from "./SessionProvider";
import Navigation from "@/components/Navigation";
import { getServerSession } from "next-auth";

import { extractRouterConfig } from "uploadthing/server";
import { ourFileRouter } from "./api/uploadthing/core";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { authOptions } from "@/lib/auth";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Reflection Sphere",
  description: "Generated by create next app",
  metadataBase: new URL("https://reflection-sphere-essencesei.vercel.app/"),
  alternates: {
    canonical: "/",
    languages: {
      "en-US": "/en-US",
    },
  },
  openGraph: {
    images: "/opengraph-image.jpg",
  },
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  return (
    <html data-theme="light" lang="en" suppressHydrationWarning>
      <body className={`${inter.className}`}>
        <NextSSRPlugin
          /**
           * The `extractRouterConfig` will extract **only** the route configs
           * from the router to prevent additional information from being
           * leaked to the client. The data passed to the client is the same
           * as if you were to fetch `/api/uploadthing` directly.
           */
          routerConfig={extractRouterConfig(ourFileRouter)}
        />
        <SessionProvider>
          <Navigation session={session}></Navigation>
          <main className="min-h-screen md:mx-96 mx-4 ">{children}</main>
        </SessionProvider>
      </body>
    </html>
  );
}
